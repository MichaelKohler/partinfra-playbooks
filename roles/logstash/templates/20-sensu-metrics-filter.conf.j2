filter {

    if [type] == "sensu" and [check][type] == "metric" {

        # Change event timestamp to the sensu check execution timestamp
        date {
            match => ["[check][executed]", "UNIX"]
        }

        # Workaround to the way logstash treats \n
        mutate {
            gsub => ["[check][output]", "\n", "LINE_BREAK"]
        }

        # Split graphite metrics from multiline to array
        mutate {
            split => ["[check][output]", "LINE_BREAK"]
        }

        # Parse graphite metrics
        grok {
            match => ["[check][output]", "%{DATA:sensu_metric_name} %{BASE16FLOAT:sensu_metric_value %{INT}"]
        }

        # Convert metric result to float
        mutate {
            convert => ["sensu_metric_value", "float"]
        }

        ruby {
            code =>
            "
            metric_name = event.get('sensu_metric_name')
            metric_value = event.get('sensu_metric_value')
            case metric_name
              when Array
                metric_name.each_with_index do |val, index|
                  event.set('metric' + index.to_s, metric_value[index])
                end
              when String
                event.set('metric0', metric_value)
            end
            "
            remove_field => ['sensu_metric_name', 'sensu_metric_value']
        }
    }
}
